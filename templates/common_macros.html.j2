{#
    Copyright DB InfraGO AG and contributors
    SPDX-License-Identifier: Apache-2.0
#}

{% macro show_other_attributes(object, excluded=[]) %}
    {% set empty_attrs = [] %}

    {%- for attr in object.__dir__()|sort if not attr.startswith("_") and attr not in ["from_model", "pvmt"]+excluded -%}
    {%- set value = object[attr] -%}
    {% if value %}
        <h2 style="opacity: 0.8; border-top: 1px solid grey; margin-top: 1rem; padding-left: 1rem; font: 1rem monospace">{{ attr }}</h2>
        {%- if value.as_svg -%}
        {{ value.as_svg|safe }}
        {% elif value._short_html_ -%}
        <p>{{ value._short_html_() }}</p>
        {% else -%}
        <p>{{ value }}</p>
        {% endif -%}
    {% else %}
        {% set _none = empty_attrs.append(attr) %}
    {% endif %}
    {% endfor -%}

    {% if empty_attrs %}
    <h3>Unset attributes</h3>
    <p>The object has the following attributes in unset state (empty values): {{ ", ".join(empty_attrs) }}</p>
    {% endif %}
{% endmacro %}

{% macro req_rels(rels) %}
{% if rels %}
<ul>
{% for rel in rels %}
    <li>
        <a href="{{ rel.type | make_href }}">{{rel.type.long_name }}</a>
        {{ rel.target.__class__.__name__ }}
        <a href="{{ rel.target | make_href }}">{{ rel.target.name }}</a>
    </li>
{% endfor %}
</ul>
{% else %}
<p style="color: red;">Not linked to any model objects</p>
{% endif%}
{% endmacro %}

{% macro render_requirements_table(reqs) %}
    {% for req in reqs %}
        <div style="margin-top: 1em; margin-bottom: 1em;">
            <div><b>ID:</b> <a href="{{ req | make_href }}">{{ req.uuid }}</a></div>
            <div>{{ req.text if req.text else req.long_name }}</div>
            <div>{{req_rels(req.relations) | safe}}</div>
        </div>
        {% endfor %}
{% endmacro %}

{% macro render_reqs_by_type(reqs, types) %}
    {% for req_type in types+[None] %}
        {% set reqs = reqs.by_type(req_type)%}
        {% if reqs %}
            <h3>Of type "{{ req_type | string }}"</h3>
            {{ render_requirements_table(reqs) | safe }}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% macro description(obj) %}
    {% if obj.description %}
        <p>{{ obj.description | safe }}</p>
    {% else %}
    <p style="color:red">No description available.</p>
    {% endif %}
{% endmacro %}

{%- macro typed_name(object) -%}<b>{{ object.__class__.__name__ }}</b> <a href="{{ object | make_href }}">{{ object.name  | trim }}</a>{%- endmacro -%}

{%- macro linked_name(object) -%}<a href="{{ object | make_href }}">{{ object.name  | trim }}</a>{%- endmacro -%}

{%- macro display_traceability(object, complain=False) -%}
    {%- set realized_attrs = [] -%}
    {%- set realizing_attrs = [] -%}
    {%- for attr in object.__dir__() -%}
        {%- if attr.startswith("realized_") -%}
            {% set _none = realized_attrs.append(attr) %}
        {%- elif attr.startswith("realizing_") -%}
            {% set _none = realizing_attrs.append(attr) %}
        {%- endif-%}
    {%- endfor -%}
    {%- set realized_objects = object[realized_attrs | first] if realized_attrs else None -%}
    {%- set realizing_objects = object[realizing_attrs | first] if realizing_attrs else None -%}

    <h2>Traceability</h2>
    {% if realized_objects %}
    <p>{{ object.name }} realizes the following objects:<p>
    <ul>
    {%- for obj in realized_objects -%}<li>{{ typed_name(obj) | safe}}</li>{%- endfor -%}
    </ul>
    {%- elif complain -%}
        <p style="color: red;">{{ object.name }} doesn't seem to realize any object</p>
    {%- endif -%}
    {% if realizing_objects %}
    <p>{{ object.name }} is realized by the following objects:</p>
    <ul>
    {%- for obj in realizing_objects -%}<li>{{ typed_name(obj) | safe}}</li>{%- endfor -%}
    </ul>
    {%- elif complain -%}
        <p style="color: red;">{{ object.name }} doesn't seem to be realized by any object</p>
    {% endif %}
{%- endmacro -%}

{% macro display_property_values(object) %}
{% if object.property_value_groups  %}
<h2>Other properties</h2>
    <p>The following properties were additionally assigned to {{ object.name }}</p>
    {% for group in object.property_value_groups %}
        <p><b>{{ group.name | safe}}</b></p>
        <table>
            <thead>
                <tr>
                    <td>Property</td>
                    <td>Value</td>
                </tr>
            </thead>
            <tbody>
            {% for prop in group.property_values %}
            <tr>
                <td>{{ prop.name }}</td>
                <td>{{ prop.value.name | safe if prop.value.name else prop.value }}</td>
            </tr>
            {% endfor %}
            </tbody>
        </table>
    {% endfor %}
{% endif %}
{% endmacro %}
