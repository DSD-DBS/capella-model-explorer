# Copyright DB InfraGO AG and contributors
# SPDX-License-Identifier: CC0-1.0

name: Build

on:
  pull_request:
  push:
    branches: [master]
    tags: ["v*.*.*"]
  workflow_dispatch:

jobs:
  test:
    name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    env:
      SKIP_LONG_RUNNING_TESTS: ${{ github.event_name == 'pull_request' && github.event.pull_request.draft == true }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python_version:
          - "3.11"
          - "3.12"
          - "3.13"
        include:
          - os: windows-latest
            python_version: "3.11"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
          python-version: ${{matrix.python_version}}
      - name: Install dependencies
        run: uv pip install ".[test]"
      - name: Run unit tests
        run: uv run coverage run

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          cache: pip
          cache-dependency-path: pyproject.toml
          python-version: 3.11
      - name: Upgrade pip
        run: python -m pip install -U pip
      - name: Install pre-commit
        run: python -m pip install pre-commit
      - name: Install hadolint
        run: |-
          curl -Lo \
            /usr/local/bin/hadolint \
            https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x /usr/local/bin/hadolint
          hadolint --version
      - name: Install self
        run: python -m pip install .
      - name: Install Node packages for pre-commit run
        run: cme pre-commit-setup
      - name: Run Pre-Commit
        run: pre-commit run --all-files

  wheel:
    name: Build wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |-
          python -m pip install -U pip
          python -m pip install build twine
      - name: Build packages
        run: |-
          python -m build
      - name: Verify packages
        run: |-
          python -m twine check dist/*
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: 'dist/*'
  pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [wheel, test]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/capella-model-explorer
    permissions:
      id-token: write
    steps:
      - name: Download built wheel
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/model-explorer
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
